#! /usr/bin/env python
import sys

import _path
import scotch.proxy, scotch.compare

from cPickle import load
record_holder = load(open(sys.argv[1], 'rb'))

app = scotch.proxy.ProxyApp()

for record in record_holder:
    path = record.environ.get('PATH_INFO')

    print '==>', path, '...'
    new_response = record.refeed(app)
    print '...', new_response.status,

    old_response = record.response

    if scotch.compare.is_same_response(old_response, new_response):
        print '(identical response)'
        continue

    print ''

    if new_response.status != old_response.status:
        print '++ RESPONSE STATUS DIFFERS:', old_response.status, \
              new_response.status

    same, diff12, diff21 = scotch.compare.compare_headers(old_response,
                                                          new_response)
    if diff12 or diff21:
        for k, v in diff12.items():
            for x in v:
                print '++ MISSING HEADER:', k, x

        for k, v in diff21.items():
            for x in v:
                print '++ NEW HEADER:', k, x

    if old_response.get_output() != new_response.get_output():
        print '++ OUTPUT DIFFERS'
        print '   OLD OUTPUT:\n====\n%s\n====' % (old_response.get_output().rstrip(),)
        print '   NEW OUTPUT:\n====\n%s\n====' % (new_response.get_output().rstrip(),)
